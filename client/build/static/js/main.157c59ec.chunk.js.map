{"version":3,"sources":["context/AuthContext.js","components/loader/loader.js","components/loader/index.js","services/index.js","actionsCreator/index.js","components/usersList/index.js","components/usersList/usersList.js","hooks/message.hook.js","components/toolbar/index.js","components/toolbar/toolbar.js","hooks/auth.hook.js","pages/UsersListPage.js","hooks/http.hook.js","pages/SignUpPage.js","pages/SignIn.js","components/navbar/navbar.js","reducers/usersReducer.js","reducers/index.js","store.js","App.js","routes/routes.js","serviceWorker.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","className","create","baseURL","api","axios","headers","setHeader","defaults","common","getUsers","a","get","response","status","Error","deleteById","id","delete","blockById","post","unlockById","logoutRequest","auth","form","data","usersLoaded","newUsers","type","payload","usersError","error","fetchUsers","dispatch","then","catch","err","LinksList","users","useState","select","setSelect","useDispatch","useEffect","length","filter","user","checked","dateFormat","dateNow","usaTime","Date","toLocaleString","timeZone","onChange","sel","map","key","name","email","dateRegister","dateLastAuthorization","useMessage","useCallback","text","window","M","toast","html","Toolbar","useContext","useSelector","state","usersReducer","message","block","usersChecked","currentUserId","JSON","parse","localStorage","getItem","currentUser","find","Promise","all","remove","unlock","onClick","UsersPage","loading","foo","useHttp","setLoading","setError","request","url","method","body","stringify","fetch","json","ok","clearError","RegPage","history","useHistory","password","setForm","changeHandler","event","target","value","registerHandler","push","htmlFor","to","disabled","AuthPage","authorization","loginHandler","Navbar","logoutHandler","e","preventDefault","href","initialState","action","idxEditedUser","findIndex","item","slice","checkbox","i","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","App","setToken","ready","setReady","setUserId","jwtToken","setItem","removeItem","useAuth","routes","path","exact","component","useRoutes","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister","console"],"mappings":"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","file":"static/js/main.157c59ec.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n})\r\n","import React from \"react\"\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader-loading\">\r\n            <div className=\"preloader-wrapper active\">\r\n                <div className=\"spinner-layer spinner-red-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"/>\r\n                    </div>\r\n                    <div className=\"gap-patch\">\r\n                        <div className=\"circle\"/>\r\n                    </div>\r\n                    <div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import Loader from \"./loader\"\r\n\r\nexport default Loader\r\n","import axios from 'axios'\r\n\r\nexport const create = (baseURL = '') => {\r\n\r\n    const api = axios.create({\r\n        baseURL,\r\n        headers: {\r\n            'content-type': 'application/json',\r\n        }\r\n    })\r\n\r\n    const setHeader = (token) => {\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n    }\r\n\r\n    const getUsers = async (token) => {\r\n        setHeader(token)\r\n        try {\r\n            const response = await api.get('/api/users')\r\n            if (response.status === 401) {\r\n                throw new Error('No authorization.')\r\n            }\r\n            return response\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    const deleteById = async (id, token) => {\r\n        setHeader(token)\r\n        try {\r\n            const response = await api.delete(`/api/users/delete/${id}`)\r\n            if (response.status === 401) {\r\n                throw new Error('No authorization.')\r\n            }\r\n            return response\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    const blockById = async (id, token) => {\r\n        setHeader(token)\r\n        try {\r\n            const response = await api.post(`/api/users/block/${id}`)\r\n            if (response.status === 401) {\r\n                throw new Error('No authorization.')\r\n            }\r\n            return response\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    const unlockById = async (id, token) => {\r\n        setHeader(token)\r\n        try {\r\n            const response = await api.post(`/api/users/unlock/${id}`)\r\n            if (response.status === 401) {\r\n                throw new Error('No authorization.')\r\n            }\r\n            return response\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    const logoutRequest = (token) => {\r\n        setHeader(token)\r\n        api.get('/api/users/logout')\r\n    }\r\n\r\n    const auth = async (form) => {\r\n        const data = await api.post(\r\n            '/api/auth/login',\r\n            {...form}\r\n            )\r\n\r\n        setHeader(data.token)\r\n\r\n        return data\r\n    }\r\n\r\n    return {\r\n        auth,\r\n        getUsers,\r\n        deleteById,\r\n        blockById,\r\n        unlockById,\r\n        logoutRequest\r\n    }\r\n}\r\n","import {create} from \"../services\"\r\n\r\nconst usersRequested = () => {\r\n    return {\r\n        type: 'FETCH_USERS_REQUEST'\r\n    }\r\n}\r\n\r\nconst usersLoaded = (newUsers) => {\r\n    return {\r\n        type: 'FETCH_USERS_SUCCESS',\r\n        payload: newUsers\r\n    }\r\n}\r\n\r\nconst usersError = (error) => {\r\n    return {\r\n        type: 'FETCH_USERS_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst editUserCheckbox = (userId) => {\r\n    return {\r\n        type: 'EDIT_USER_CHECKBOX',\r\n        payload: userId\r\n    }\r\n}\r\n\r\nconst editUserAllCheckbox = () => {\r\n    return {\r\n        type: 'EDIT_USER_ALL_CHECKBOX'\r\n    }\r\n}\r\n\r\nconst fetchUsers = (token) => (dispatch) => {\r\n    dispatch(usersRequested())\r\n    create().getUsers(token)\r\n        .then(({data}) => {\r\n            dispatch(usersLoaded(data))\r\n        })\r\n        .catch((err) => {\r\n                dispatch(usersError(err))\r\n                throw err\r\n            }\r\n        )\r\n}\r\n\r\nexport {\r\n    usersRequested,\r\n    usersLoaded,\r\n    usersError,\r\n    fetchUsers,\r\n    editUserCheckbox,\r\n    editUserAllCheckbox\r\n}\r\n","import LinksList from \"./usersList\"\r\n\r\nexport default LinksList\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {editUserCheckbox, editUserAllCheckbox} from \"../../actionsCreator\"\r\n\r\n\r\nconst LinksList = ({users}) => {\r\n    const [select, setSelect] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        setSelect(users.length === users.filter((user) => user.checked === true).length)\r\n    }, [users])\r\n\r\n    const checkHandler = (id) => () => {\r\n        dispatch(editUserCheckbox(id))\r\n    }\r\n\r\n    const checkAllHandler = () => {\r\n        dispatch(editUserAllCheckbox())\r\n        setSelect(sel => !sel)\r\n    }\r\n\r\n    const dateFormat = (dateNow) => {\r\n        if (dateNow) {\r\n            let usaTime = new Date(dateNow).toLocaleString(\"en-US\", {timeZone: \"Europe/Minsk\"});\r\n            usaTime = new Date(usaTime);\r\n            return usaTime.toLocaleString()\r\n        }\r\n        return dateNow\r\n    }\r\n\r\n    return (\r\n        <table className='responsive-table'>\r\n            <thead>\r\n            <tr>\r\n                <td className=\"main-checkbox\">\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            className=\"filled-in checkbox-blue-grey\"\r\n                            checked={select}\r\n                            onChange={checkAllHandler}/>\r\n                        <span/>\r\n                    </label>\r\n                </td>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>email</th>\r\n                <th>Date of registration</th>\r\n                <th>Date of last authorization</th>\r\n                <th>Status</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {users.map((user) => {\r\n                return (\r\n                    <tr key={user.id}>\r\n                        <td className=\"checkbox-table-row\">\r\n                            <label>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"filled-in checkbox-blue-grey\"\r\n                                    checked={user.checked}\r\n                                    onChange={checkHandler(user.id)}/>\r\n                                <span/>\r\n                            </label>\r\n                        </td>\r\n                        <td>{user.id}</td>\r\n                        <td>{user.name}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{dateFormat(user.dateRegister)}</td>\r\n                        <td>{dateFormat(user.dateLastAuthorization)}</td>\r\n                        <td>{user.status}</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default LinksList\r\n","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n    return useCallback((text) => {\r\n        if (window.M && text) {\r\n            window.M.toast({html: text})\r\n        }\r\n    }, [])\r\n}\r\n","import Toolbar from \"./toolbar\"\r\n\r\nexport default Toolbar\r\n","import React, {useContext} from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\n\r\nimport {create} from \"../../services\"\r\nimport {fetchUsers} from \"../../actionsCreator\"\r\nimport {AuthContext} from \"../../context/AuthContext\"\r\nimport {storageName} from \"../../hooks/auth.hook\"\r\nimport {useMessage} from \"../../hooks/message.hook\"\r\n\r\nconst Toolbar = () => {\r\n\r\n    const {token, logout} = useContext(AuthContext)\r\n    const {usersReducer: {users}} = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const message = useMessage()\r\n\r\n    const block = async () => {\r\n        try {\r\n            const usersChecked = users.filter((user) => user.checked === true)\r\n\r\n            if (usersChecked.length !== 0) {\r\n\r\n                const usersUnlocked = usersChecked.filter((user) => user.status !== 'Blocked')\r\n\r\n                if (usersUnlocked.length !== 0) {\r\n\r\n                    const currentUserId = JSON.parse(localStorage.getItem(storageName)).userId\r\n                    const currentUser = usersChecked.find((user) => user.id === currentUserId)\r\n\r\n                    await Promise.all(usersChecked.map((user) => {\r\n                        return create().blockById(user.id, token)\r\n                    }))\r\n\r\n                    if (currentUser) {\r\n                        message('Your account is blocked.')\r\n                        return logout()\r\n                    }\r\n\r\n                    dispatch(fetchUsers(token))\r\n                } else {\r\n                    usersChecked.length === 1 ?\r\n                        message('User is already blocked.') :\r\n                        message('Users are already blocked.')\r\n                }\r\n            }\r\n        } catch (e) {\r\n            message('Your account is blocked or deleted.')\r\n            logout()\r\n        }\r\n    }\r\n\r\n    const remove = async () => {\r\n        try {\r\n            const usersChecked = users.filter((user) => user.checked === true)\r\n\r\n            if (usersChecked.length !== 0) {\r\n                const currentUserId = JSON.parse(localStorage.getItem(storageName)).userId\r\n                const currentUser = usersChecked.find((user) => user.id === currentUserId)\r\n\r\n                await Promise.all(usersChecked.map((user) => {\r\n                    return create().deleteById(user.id, token)\r\n                }))\r\n\r\n                if (currentUser) {\r\n                    message('Your account is deleted.')\r\n                    return logout()\r\n                }\r\n\r\n                dispatch(fetchUsers(token))\r\n            }\r\n        } catch (e) {\r\n            message('Your account is blocked or deleted.')\r\n            logout()\r\n        }\r\n    }\r\n\r\n    const unlock = async () => {\r\n        try {\r\n            const usersChecked = users.filter((user) => user.checked === true)\r\n\r\n            if (usersChecked.length !== 0) {\r\n\r\n                const usersBlocked = usersChecked.filter((user) => user.status === 'Blocked')\r\n\r\n                if (usersBlocked.length !== 0) {\r\n                    await Promise.all(usersChecked.map((user) => {\r\n                        return create().unlockById(user.id, token)\r\n                    }))\r\n\r\n                    dispatch(fetchUsers(token))\r\n                } else {\r\n                    usersChecked.length === 1 ?\r\n                        message('User is not blocked.') :\r\n                        message('Users are not blocked.')\r\n                }\r\n            }\r\n        } catch (e) {\r\n            message('Your account is blocked or deleted.')\r\n            logout()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"toolbar-buttons\">\r\n            <button className=\"waves-effect red accent-1 btn\" onClick={block}>Block</button>\r\n            <i className=\"medium material-icons\" onClick={unlock}>lock_open</i>\r\n            <i className=\"medium material-icons\" onClick={remove}>delete</i>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar\r\n","import {useState, useCallback, useEffect} from 'react'\r\n\r\nimport {create} from \"../services\"\r\n\r\nexport const storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    }, [])\r\n\r\n    const logout = useCallback(async () => {\r\n        const token = JSON.parse(localStorage.getItem(storageName)).token\r\n        await create().logoutRequest(token)\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n        setReady(true)\r\n    }, [login])\r\n\r\n    return { login, logout, token, userId, ready}\r\n}\r\n","import React, {useContext, useEffect, Fragment} from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {AuthContext} from \"../context/AuthContext\"\r\nimport Loader from \"../components/loader\"\r\nimport LinksList from \"../components/usersList\"\r\nimport {usersError, usersLoaded, usersRequested} from \"../actionsCreator\"\r\nimport Toolbar from \"../components/toolbar\"\r\nimport {create} from \"../services\"\r\n\r\nexport {create} from '../services'\r\n\r\nconst UsersPage = () => {\r\n    const {users, loading, error} = useSelector(({usersReducer}) => usersReducer)\r\n    const {token, logout} = useContext(AuthContext)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const foo = async () => {\r\n            try {\r\n                dispatch(usersRequested())\r\n                const data = await create().getUsers(token)\r\n                dispatch(usersLoaded(data.data))\r\n            } catch (e) {\r\n                dispatch(usersError(e))\r\n                logout()\r\n            }\r\n        }\r\n\r\n        foo()\r\n\r\n    }, [dispatch, logout, token])\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"center\">Unexpected error. Please try again.</div>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Toolbar/>\r\n            <LinksList users={users}/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersPage\r\n\r\n","import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers\r\n            })\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}\r\n","import React, {useEffect, useState} from \"react\"\r\nimport {useHttp} from \"../hooks/http.hook\"\r\nimport {useMessage} from \"../hooks/message.hook\"\r\nimport {Link, useHistory} from \"react-router-dom\"\r\n\r\nconst RegPage = () => {\r\n    const message = useMessage()\r\n    const history = useHistory()\r\n    const {loading, error, request, clearError} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        name: '',\r\n        password: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        return () => clearError()\r\n    }, [error, message, clearError])\r\n\r\n    const changeHandler = (event) => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n            message(data.message)\r\n            if (data.message === 'User created.') {\r\n                history.push('/auth')\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1 className=\"center\">Users List</h1>\r\n                <div className=\"card white darken-1\">\r\n                    <div className=\"card-content black-text\">\r\n                        <span className=\"card-title center\">Create your account</span>\r\n                        <div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input id=\"name\"\r\n                                       type=\"text\"\r\n                                       name=\"name\"\r\n                                       className=\"validate black-input\"\r\n                                       value={form.name}\r\n                                       onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"name\">Enter name</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input id=\"email\"\r\n                                       type=\"text\"\r\n                                       name=\"email\"\r\n                                       className=\"validate black-input\"\r\n                                       value={form.email}\r\n                                       onChange={changeHandler}\r\n                                />\r\n                                    <label htmlFor=\"email\">Enter email</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       className=\"validate black-input\"\r\n                                       value={form.password}\r\n                                       onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"password\">Enter password</label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action center\">\r\n                        <div>\r\n                            <span>\r\n                                Have an account? <Link to=\"/\" className=\"link-auth\">Log in now </Link>\r\n                            </span>\r\n                        </div>\r\n                        <button\r\n                            className=\"btn blue lighten-1 white-text\"\r\n                            onClick={registerHandler}\r\n                            disabled={loading}\r\n                        >\r\n                            SIGN UP\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegPage\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst AuthPage = () => {\r\n  const authorization = useContext(AuthContext);\r\n  const message = useMessage();\r\n\r\n  const { error, clearError, request } = useHttp();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [form, setForm] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    return () => clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await request('/api/auth/login', 'POST', { ...form });\r\n      authorization.login(data.token, data.userId);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h1 className=\"center\">Users List</h1>\r\n        <div className=\"card white darken-1\">\r\n          <div className=\"card-content black-text auth\">\r\n            <span className=\"card-title center black-text\">Sign In</span>\r\n            <div className=\"card-input\">\r\n              <div className=\"input-field\">\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  className=\"validate black-input\"\r\n                  value={form.email}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Enter email</label>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"validate black-input\"\r\n                  value={form.password}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"password\">Enter password</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action center\">\r\n            <div>\r\n              <span>\r\n                Don't have an account?\r\n                <Link className=\"link-auth\" to=\"/signup\">\r\n                  Sign Up\r\n                </Link>\r\n              </span>\r\n            </div>\r\n            <button\r\n              className=\"btn blue lighten-1 white-text\"\r\n              onClick={loginHandler}\r\n              disabled={loading}\r\n            >\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n};\r\n\r\nexport default AuthPage;\r\n","import React, {useContext} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useHistory} from 'react-router'\r\n\r\nimport {AuthContext} from \"../../context/AuthContext\"\r\n\r\nconst Navbar = () => {\r\n    const auth = useContext(AuthContext)\r\n    const history = useHistory()\r\n\r\n    const logoutHandler = async (e) => {\r\n        e.preventDefault()\r\n        await auth.logout()\r\n        history.push('/')\r\n    }\r\n    return (\r\n            <nav className=\"fixed-navbar\">\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"nav-wrapper navbar-right\">\r\n                        <NavLink to=\"/users\" className=\"brand-logo left\">Users List</NavLink>\r\n                        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                            <li><a href=\"/\" onClick={logoutHandler}>Logout</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","const initialState = {\r\n    loading: false,\r\n    error: null,\r\n    users: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_USERS_REQUEST': {\r\n\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        }\r\n\r\n        case 'FETCH_USERS_SUCCESS': {\r\n\r\n            const users = action.payload\r\n                .map(user => ({...user, checked: false}))\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                users\r\n            }\r\n        }\r\n\r\n        case 'FETCH_USERS_FAILURE': {\r\n\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        }\r\n\r\n        case 'EDIT_USER_CHECKBOX': {\r\n\r\n            const id = action.payload\r\n            const {users} = state\r\n            const idxEditedUser = users.findIndex((item) => item.id === id)\r\n\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...users.slice(0, idxEditedUser),\r\n                    {\r\n                        ...users[idxEditedUser],\r\n                        checked: !users[idxEditedUser].checked\r\n                    },\r\n                    ...users.slice(idxEditedUser + 1)\r\n                ]\r\n            }\r\n        }\r\n\r\n        case 'EDIT_USER_ALL_CHECKBOX': {\r\n\r\n            const {users} = state\r\n\r\n            let checkbox = true\r\n            for (let i = 0; i < users.length; i++) {\r\n                if (users[i].checked === false) {\r\n                    checkbox = true\r\n                    break\r\n                }\r\n                checkbox = false\r\n            }\r\n\r\n            const newUsers = state.users\r\n                .map((user) => {\r\n                    return {\r\n                        ...user,\r\n                        checked: checkbox\r\n                    }\r\n                })\r\n\r\n            return {\r\n                ...state,\r\n                users: newUsers\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\n","import {combineReducers} from \"redux\"\r\n\r\nimport usersReducer from './usersReducer'\r\n\r\nexport default combineReducers({usersReducer})\r\n","import {createStore} from 'redux'\r\nimport reducer from \"./reducers/index\"\r\nimport thunk from \"redux-thunk\"\r\nimport {applyMiddleware} from \"redux\"\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(reducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport 'materialize-css'\r\n\r\nimport { useRoutes } from './routes/routes';\r\nimport { useAuth } from './hooks/auth.hook';\r\nimport { AuthContext } from './context/AuthContext';\r\nimport NavBar from './components/navbar/navbar';\r\nimport Loader from './components/loader/loader';\r\nimport store from './store';\r\n\r\nconst App = () => {\r\n  const { token, login, logout, userId, ready } = useAuth();\r\n  const isAuthenticated = !!token;\r\n  const routes = useRoutes(isAuthenticated);\r\n\r\n  if (!ready) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <AuthContext.Provider\r\n        value={{\r\n          token,\r\n          login,\r\n          logout,\r\n          userId,\r\n          isAuthenticated,\r\n        }}\r\n      >\r\n        <Router>\r\n          {isAuthenticated && <NavBar />}\r\n          <div className=\"container\">{routes}</div>\r\n        </Router>\r\n      </AuthContext.Provider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport UsersPage from '../pages/UsersListPage'\r\nimport RegPage from '../pages/SignUpPage'\r\nimport AuthPage from \"../pages/SignIn\"\r\n\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/users\" exact component={UsersPage}/>\r\n                <Redirect to=\"/users\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={AuthPage}/>\r\n            <Route path=\"/signup\" exact component={RegPage}/>\r\n            <Redirect to=\"/\"/>\r\n        </Switch>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}